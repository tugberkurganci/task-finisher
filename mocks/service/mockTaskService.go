// Code generated by MockGen. DO NOT EDIT.
// Source: konzek-mid/service (interfaces: TaskService)

// Package service is a generated GoMock package.
package service

import (
	models "konzek-mid/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTaskService is a mock of TaskService interface.
type MockTaskService struct {
	ctrl     *gomock.Controller
	recorder *MockTaskServiceMockRecorder
}

// MockTaskServiceMockRecorder is the mock recorder for MockTaskService.
type MockTaskServiceMockRecorder struct {
	mock *MockTaskService
}

// NewMockTaskService creates a new mock instance.
func NewMockTaskService(ctrl *gomock.Controller) *MockTaskService {
	mock := &MockTaskService{ctrl: ctrl}
	mock.recorder = &MockTaskServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskService) EXPECT() *MockTaskServiceMockRecorder {
	return m.recorder
}

// EnqueueTask mocks base method.
func (m *MockTaskService) EnqueueTask(arg0 models.Task) (models.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnqueueTask", arg0)
	ret0, _ := ret[0].(models.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EnqueueTask indicates an expected call of EnqueueTask.
func (mr *MockTaskServiceMockRecorder) EnqueueTask(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnqueueTask", reflect.TypeOf((*MockTaskService)(nil).EnqueueTask), arg0)
}

// GetTaskStatus mocks base method.
func (m *MockTaskService) GetTaskStatus(arg0 int) (models.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTaskStatus", arg0)
	ret0, _ := ret[0].(models.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTaskStatus indicates an expected call of GetTaskStatus.
func (mr *MockTaskServiceMockRecorder) GetTaskStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTaskStatus", reflect.TypeOf((*MockTaskService)(nil).GetTaskStatus), arg0)
}

// ScheduleTasks mocks base method.
func (m *MockTaskService) ScheduleTasks() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ScheduleTasks")
}

// ScheduleTasks indicates an expected call of ScheduleTasks.
func (mr *MockTaskServiceMockRecorder) ScheduleTasks() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScheduleTasks", reflect.TypeOf((*MockTaskService)(nil).ScheduleTasks))
}

// StartWorkers mocks base method.
func (m *MockTaskService) StartWorkers() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "StartWorkers")
}

// StartWorkers indicates an expected call of StartWorkers.
func (mr *MockTaskServiceMockRecorder) StartWorkers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartWorkers", reflect.TypeOf((*MockTaskService)(nil).StartWorkers))
}
